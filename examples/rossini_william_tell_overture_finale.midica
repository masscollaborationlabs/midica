// This example file provides the finale of the "William Tell Overture" by Gioachino Rossini.
// It comprises the measures 226 until the end (measure 477).
// 
// However the measure naming here (in function names and code comments) begins with number 1.
// So you have to add 225 to get the original measure number.
// 
// This file assumes standard program configuration:
// - Note System:       International: c, d, e, ... (lower case)
// - Half Tone Symbols: # / b (c#, cb, d#, db, ...)
// - Octave Naming:     +n/-n
// - Syntax:            Mixed Case Syntax
// 
// Function naming conventions used in this example file:
// - Functions related to a certain measure start with 'm', followed by the measure number.
//   If a measure is reused, the measure number relates to the measure where it's first called.
// - Functions starting with 'i_' contain an instrument switch.
// - Functions starting with 'd_all_' switch all channels to a certain duration mode (staccato or legato)
// - Functions starting with 'v_all_' switch all channels to a certain velocity mode (piano, forte, ...)
// 
// Pattern naming conventions used in this example file:
// - Patterns for normal channels (not percussion)...
//   - start with p_
//   - followed by a description of their content where the following characters are used:
//     - 2=half note; 4=4th note; 8=8th note; s=16th note
//     - tr16 = triller with 16th notes; tr32 = triller with 32th notes
//   - end with _1, _2, or _3 (The number determins the number of notes in the chord)
// - Patterns for the percussion channel...
//   - start with perc
//   - end with a number (the number of the measure where they occur for the first time)


META
	copyright  (c) Mozilla Public License, v. 2.0, author: Jan Trukenm√ºller
	title      William Tell Ouverture - Finale
	composer   Gioachino Rossini
END

////////////////////////////
// define constants
////////////////////////////

CONST $stac        = (d=50%)
CONST $leg         = (d=100%)
CONST $pp          = (v=33)    // pianissimo
CONST $p           = (v=49)    // piano
CONST $p_marcato   = (v=58)    // piano with accent
CONST $f           = (v=96)    // forte
CONST $ff          = (v=112)   // fortissimo
CONST $sf          = (v=120)   // sforzato
CONST $sf_accent   = (v=125)   // sforzato with accent
CONST $tutta_forza = (v=127)   // tutta forza

///////////////////////////////////////
// init channels with instruments
///////////////////////////////////////

INSTRUMENTS
	0   PICCOLO        Piccolo
	1   FLUTE          Flute
	2   OBOE           Oboe
	3   CLARINET       Clarinet in A
	4   BASSOON        Bassoon
	5   FRENCH_HORN    Horn in G
	6   ENGLISH_HORN   Horn in E
	7   TRUMPET        Trumpet in E
	8   TROMBONE       Trombone
	9   STANDARD       Triangle, Bass Drum, Cymbal
	10  TIMPANI        Timpani
	11  VIOLIN         Violin I
	12  VIOLIN         Violin II
	13  VIOLA          Viola
	14  CELLO          Violoncello
	15  CONTRABASS     Double Bass
END

///////////////////////////////////////
// define chord for percussion
///////////////////////////////////////

// CHORD perc_all = to,bd2,cc2        // TODO: update midica to allow predefined chords with percussion shortcuts
CHORD perc_all = 81,35,57

/////////////////////////////////
// start the actual sequence
/////////////////////////////////

// set key signature, time signature and tempo
*  key    e/maj
*  time   2/4
*  tempo  152

// init channel defaults
CALL  d_all_staccato
CALL  v_all_ff

// measure 1-4
7:  b:p_intro_1    b:8 g# e g#    b g# b e+

// m. 5-8
*
6:  e,g#:p_intro_2                  e,g#:8 b-,f# g#-,e b-,f#     e,g# g#,b f#,a e,g#
7:  b:8 g# e g#       b g# b  e+    b:p_intro_1

// m. 9-10
*
5:  b-,b:p_intro_2
6:  b-,f#:8 e,g# b-,f# f#,a            e,g# b-,f# g#-,e e,g#
7:  b:p_intro_1

// m. 11-14
*
{ q=4
	5:   b-,b:p_8ss88_2
	6:   b-,f#:p_8ss88_2
	7:   b:p_8ss88_1
	10:  b-2:p_8ss88_1
}

// m. 15-17
*
CALL  v_all_sf
CALL  d_all_legato
4:   b-2,d#:1+8
5:   b-,b:1+8
6:   d#,f#:1+8
7:   b:1+8
8:   b-,d#,f#:1+8
10:  b-2:p_2tr32_1   b-2:p_2tr32_1   b-2:8 -:4.

// m. 18
*
10:  -:4.
*
CALL  d_all_staccato
CALL  v_all_pp
3:   b-:p_ss_1
4:   e-:p_ss_1
6:   b-,g#-:p_ss_2
11:  b-:p_ss_1
12:  g#-:p_ss_1
13:  e-:p_ss_1
14:  e-:p_ss_1

// m. 19-21
*
CALL m19_to_26_1(contrabass=0)
FUNCTION m19_to_26_1
	//   19                  20                        21                          22
	3:   b-:p_8ss8ss_1       e:8 f# g# b-:16 b-        b-:p_8ss_1 e:8 g#:16 g#     f#:8 d# b- b-:16 b-
	4:   e-:p_8ss8ss_1       e-:p_888ss_1              e-:p_8ss8ss_1               b-2,b-:8 b-2,f#- b-2,f#- e-:16 e-
	6:   b-,g#-:p_8ss8ss_2   b-,g#-:p_888ss_2          b-,g#-:p_8ss8ss_2           b-2,d#:p_888_2 b-,g#-:p_ss_2
	10:  e-:p_8r8r_1         e-:p_888r_1               e-:p_8r8r_1                 b-2:p_888r_1
	11:  b-:p_8ss8ss_1       e:8 f# g# b-:16 b-        b-:p_8ss_1 e:8 g#:16 g#     f#:8 d# b- b-:16 b-
	12:  g#-:p_8ss8ss_1      b-:8 b- b- g#-:16 g#-     g#-:p_8ss_1 b-:p_8ss_1      b-:p_888_1 g#-:16 g#-
	13:  e-:p_8ss8ss_1       g#-,e-:p_888_2 e-:16 e-   e-:p_8ss_1 g#-,e-:p_8ss_2   d#-,f#-:p_888_2 e-:16 e-
	14:  e-:p_8ss8ss_1       e-:p_888ss_1              e-:p_8ss8ss_1               b-:p_888_1 e-:16 e-
	{ if ${contrabass} == 1
		//   59               60                   61                          62
		15:  e-2:p_8ss8ss_1   e-2:p_888ss_1        e-2:p_8ss8ss_1              b-3:p_888_1 e-2:p_ss_1
	}
	* 3,4,6,10,11,12,13,14,15
	
	//   23                 24                                25                                26/1
	3:   b-:p_8ss8ss_1      e:8 f# g#       $ff e:16 g#       $leg  b:4+16  $stac  a:16 g# f#   e:8 g# e
	4:   e-:p_8ss8ss_1      e-:p_888_1      $ff e-:16 e-      f#-,a-:p_8ss8ss_2                 e-,g#-:8 e-,b-:p_88_2
	6:   b-,g#-:p_8ss8ss_2  b-,g#-:p_888_2  $ff b-,g#-:p_ss_2 b-2,d#:p_8ss8ss_2                 e-,g#-:p_888_2
	10:  e-:p_8r8r_1        e-:p_888r_1     $ff               b-2:p_8r8r_1                      e-:8 e- e-
	11:  b-:p_8ss8ss_1      e:8 f# g#       $ff e:16 g#       $leg  b:4+16  $stac  a:16 g# f#   e:8 g# e
	12:  g#-:p_8ss8ss_1     b-:8 b- b-      $ff e:16 e        d#:p_8ss8ss_1                     e:8 e e
	13:  e-:p_8ss8ss_1      g#-,e-:p_888_2  $ff g#-,b-:p_ss_2 a-,f#-:p_8ss8ss_2                 g#-,b-:p_888_2
	14:  e-:p_8ss8ss_1      e-:p_888_1      $ff e-:16 e-      b-2:p_8ss8ss_1                    e-:8 e- e-
	{ if ${contrabass} == 1
		//   63               64
		15:  e-2:p_8ss8ss_1   e-2:p_888_1 $ff e-2:p_ss_1
	}
	{ else
		//   23-24
		15:  -:1
	}
	//                                                        25 == 65                                26/1 == 66/1
	15:                                                       $ff b-3:p_8ss8ss_1                      e-2:p_888_1
	*
END

// m. 26/2-30
*
CALL v_all_pp
CALL m26_2_to_34_1(trombone_ff=0)
FUNCTION m26_2_to_34_1
	VAR $trombone_dyn = $f
	{ if ${trombone_ff} == 1
		VAR $trombone_dyn = $ff
	}
	
	//   26/2          27                28                                 29                                  30
	0:   b+:16 b+      b+:p_8ss8ss_1     e+2:8 f#+2 g#+2 b+:16 b+           b+:p_8ss_1 e+2:8 g#+2:p_ss_1        f#+2:8 d#+2 b+ b+:p_ss_1
	1:   b+:16 b+      b+:p_8ss8ss_1     e+2:8 f#+2 g#+2 b+:16 b+           b+:p_8ss_1 e+2:8 g#+2:p_ss_1        f#+2:8 d#+2 b+ b+:p_ss_1
	2:   g#,b:p_ss_2   g#,b:p_8ss8ss_2   g#,e+:8 g#,f#+ g#,g#+ g#,b:p_ss_2  g#,b:p_8ss_2 g#,e+:8 e+,g#+:p_ss_2  d#+,f#+:8 b,d#+ b g#,b:p_ss_2
	3:   b-,b:p_ss_2   b-,b:p_8ss8ss_2   e,e+:8 f#,f#+ g#,g#+ b-,b:p_ss_2   b-,b:p_8ss_2 b-,b:8 g#,g#+:p_ss_2   f#,f#+:8 d#,d#+ b-,b b-,b:p_ss_2
	4:   e-,b-:p_ss_2  e-,b-:p_8ss8ss_2  e-,b-:p_888ss_2                    e-,b-:p_8ss8ss_2                    b-2,f#-:p_888_2 e-,b-:p_ss_2
	5:   b-:16 b-      b-:p_8ss8ss_1     b-:p_888ss_1                       b-:p_8ss8ss_1                       b-:p_888ss_1
	6:   g#-,e:p_ss_2  g#-,e:p_8ss8ss_2  g#-,e:p_888ss_2                    g#-,e:p_8ss8ss_2                    b-2,d#:p_888_2 g#-,e:p_ss_2
	7:   e,g#:p_ss_2   e,g#:p_8ss8ss_2   e,g#:p_888ss_2                     e,g#:p_8ss8ss_2                     b-,b:p_888_2 e,g#:p_ss_2 
	8:   -:8           e-:p_8r8r_1       e-:p_888r_1                        e-:p_8r8r_1                         b-2:p_888r_1
	10:  -:8           e-:p_8r8r_tr_1    e-:p_888r_1                        e-:p_8r8r_tr_1                      b-2:p_888r_1
	11:  b-:16 b-      b-:p_8ss8ss_1     e:8 f# g# b-:16 b-                 b-:p_8ss_1 e:8 g#:p_ss_1            f#:8 d# b- b-:p_ss_1
	12:  g#-:p_ss_1    g#-:p_8ss8ss_1    b-:8 b- b- g#-:p_ss_1              g#-:p_8ss_1 b-:p_8ss_1              b-:p_888_1 g#-:p_ss_1
	13:  e-:16 e-      e-:p_8ss8ss_1     e-,g#-:p_888_2 e-:16 e-            e-:p_8ss_1 e-,g#-:p_8ss_2           d#-,f#-:p_888_2 e-:p_ss_1
	14:  e-:16 e-      e-:p_8ss8ss_1     e-:p_888ss_1                       e-:p_8ss8ss_1                       b-2:p_888_1 e-:p_ss_1
	15:  e-2:p_ss_1    e-2:p_8ss8ss_1    e-2:p_888ss_1                      e-2:p_8ss8ss_1                      b-3:p_888_1 e-2:p_ss_1
	
	// m. 31-34/1
	//   31                32                                         33                                     34/1
	0:   b+:p_8ss8ss_1     e+2:8 f#+2 g#+2         $ff e+2:16 g#+2    $leg b+2:4+16 $stac a+2:16 g#+2 f#+2   e+2:8 g#+2 e+2
	1:   b+:p_8ss8ss_1     e+2:8 f#+2 g#+2         $ff e+:16 g#+      $leg b+:4+16  $stac a+:16 g#+ f#+      e+:8 g#+ e+
	2:   g#,b:p_8ss8ss_2   g#,e+:8 g#,f#+ g#,g#+   $ff e+:16 g#+      $leg b+:4+16  $stac a+:16 g#+ f#+      e+:8 g#+ e+
	3:   b-,b:p_8ss8ss_2   e,e+:8 f#,f#+ g#,g#+    $ff e:16 g#        $leg b:4+16   $stac a:16 g# f#         e:8 g# e
	4:   e-,b-:p_8ss8ss_2  e-,b-:p_888_2           $ff e-,b-:p_ss_2   b-2,d#:p_8ss8ss_2                      e-,e:8 e-,b-:p_88_2
	5:   b-:p_8ss8ss_1     b-:p_888_1              $ff b-:p_ss_1      b-:p_8ss8ss_1                          b-:p_888_1
	6:   g#-,e:p_8ss8ss_2  g#-,e:p_888_2           $ff g#-,e:p_ss_2   b-2,d#:p_8ss8ss_2                      g#-,e:p_888_2
	7:   e,g#:p_8ss8ss_2   e,g#:p_888_2            $ff e,g#:p_ss_2    b-,b:p_8ss8ss_2                        g#,e:p_888_2
	8:   e-:p_8r8r_1       e-:p_888r_1             $trombone_dyn      b-2:p_8r8r_1                           e-:p_888_1
	10:  e-:p_8r8r_tr_1    e-:p_888r_1             $ff                b-2:p_8r8r_1                           e-:p_888_1
	11:  b-:p_8ss8ss_1     e:8 f# g#               $ff e:16 g#        $leg b:4+16   $stac a:16 g# f#         e:8 g# e
	12:  g#-:p_8ss8ss_1    b-:8 b- b-              $ff e:p_ss_1       d#:p_8ss8ss_1                          e:p_888_1
	13:  e-:p_8ss8ss_1     e-,g#-:p_888_2          $ff b-,g#-:p_ss_2  f#-,a-:p_8ss8ss_2                      g#-,b:p_888_2
	14:  e-:p_8ss8ss_1     e-:p_888_1              $ff e-:p_ss_1      b-2:p_8ss8ss_1                         e-:p_888_1
	15:  e-2:p_8ss8ss_1    e-2:p_888_1             $ff e-2:p_ss_1     b-3:p_8ss8ss_1                         e-2:p_888_1
END

// m. 34/2-41
*
p:  $ff
CALL m34_2_to_41
FUNCTION m34_2_to_41
	//   34/2           35                 36                                 37                              38
	0:   g#+2:p_ss_1    g#+2:p_8ss8ss_1    g#+2:8 c#+3 g#+2 c#+3              g#+2 c#+3 g#+2 f#+2             e+2 d#+2 c#+2        g#+2:p_ss_1
	1:   e+2:p_ss_1     e+2:p_8ss8ss_1     e+2:8 c#+2 e+2 c#+2                e+2 c#+2 e+2 d#+2               c#+2 c+2 c#+2        e+2:p_ss_1
	2:   e+,g#+:p_ss_2  e+,g#+:p_8ss8ss_2  e+,g#+:8 c#+,c#+2 e+,g#+ c#+,c#+2  e+,g#+ c#+,c#+2 e+,g#+ d#+,f#+  c#+,e+ c+,d#+ c#+    e+,g#+:p_ss_2
	3:   e+,g#+:p_ss_2  e+,g#+:p_8ss8ss_2  e+,g#+:8 c#+ e+,g#+ c#+            e+,g#+ c#+ e+,g#+ c+            c#+ c+,d#+ c#+       e+,g#+:p_ss_2
	4:   c#-,c#:p_ss_2  c#-,c#:p_8ss8ss_2  c#-,c#:p_8r8r_2                    c#-,c#:8 - c#-,c# g#-2,g#-      c#-,c#:p_888ss_2
	5:   g#:p_ss_1      g#:p_8ss8ss_1      g#:p_8r8r_1                        g#:8 - g# f#                    g# f# e              g#:p_ss_1
	6:   e,g#:p_ss_2    e,g#:p_8ss8ss_2    e,g#:p_8r8r_2                      e,g#:8 - e,g# g#-,g#            g#-,g# g#-,f# g#-,e  e,g#:p_ss_2
	7:   g#,e+:p_ss_2   g#,e+:p_8ss8ss_2   g#,e+:p_8r8r_2                     g#,e+:8 - g#,e+ g#,f#+          g#,e+:p_888ss_2
	8:   -:8            c#-,c#:p_8r8r_2    c#-,c#:p_8r8r_2                    c#-,c#:8 - c#-,c# g#-2,g#-      c#-,c#:p_888r_2
	p:   -:8            perc_all:p_8r8r_3  perc_all:p_8r8r_3                  perc_all:p_8r8r_3               perc_all:p_888r_3
	10:  e-:p_ss_1      e-:p_8ss8ss_1      e-:p_8888_1                        e-:p_8888_1                     e-:p_888ss_1
	11:  g#+:p_ss_1     g#+:p_8ss8ss_1     g#+:8 c#+2 g#+ c#+2                g#+ c#+2 g#+ f#+                e+ d#+ c#+           g#+:p_ss_1
	12:  e+:p_ss_1      e+:p_8ss8ss_1      e+:8 c#+ e+ c#+                    e+ c#+ e+ d#+                   c#+ f# e             e+:p_ss_1
	13:  e,g#:p_ss_2    e,g#:p_8ss8ss_2    e,g#:8 c#,c#+ e,g# c#,c#+          e,g# c#,c#+ e,g# d#,f#          c#,e a g#            e,g#:p_ss_2
	14:  -:8            c#-:p_8r8r_1       c#-:p_8r8r_1                       c#-:8 - c#- g#-2                c#-:p_888r_1
	15:  -:8            c#-2:p_8r8r_1      c#-2:p_8r8r_1                      c#-2:8 - c#-2 g#-3              c#-2:p_888r_1
	
	//   39                 40                                 41
	0:   g#+2:p_8ss8ss_1    g#+2:8 c#+3 g#+2 c#+3              g#+2 c#+3 b+2 a#+2
	1:   e+2:p_8ss8ss_1     e+2:8 c#+2 e+2 c#+2                e+2 c#+2 d#+2 c#+2
	2:   e+,g#+:p_8ss8ss_2  e+,g#+:8 c#+,c#+2 e+,g#+ c#+,c#+2  e+,g#+ c#+,c#+2 d#+,b+ c#+,a#+
	3:   e+,g#+:p_8ss8ss_2  e+,g#+:8 c#+ e+,g#+ c#+            e+,g#+ c#+ d#+,f#+ c#+,e+
	4:   c#-,c#:p_8ss8ss_2  c#-,c#:p_8r8r_2                    c#-,c#:8 - f#-2,f# f#-2,f#
	5:   g#:p_8ss8ss_1      g#:p_8r8r_1                        g#:8 - f# f#
	6:   e,g#:p_8ss8ss_2    e,g#:p_8r8r_2                      e,g#:8 - b-,f# e,f#
	7:   g#,e+:p_8ss8ss_2   g#,e+:p_8r8r_2                     g#,e+:8 - b e
	8:   c#-,c#:p_8r8r_2    c#-,c#:p_8r8r_2                    c#-,c#:8 - f#-2,f#- f#-2,f#-
	p:   perc_all:p_8r8r_3  perc_all:p_8r8r_3                  perc_all:p_8r8r_3
	10:  e-:p_8ss8ss_1      e-:p_8888_1                        e-:8 e- b-2 e-
	11:  g#+:p_8ss8ss_1     g#+:8 c#+2 g#+ c#+2                g#+ c#+2 e+ a#+
	12:  e+:p_8ss8ss_1      e+:8 c#+ e+ c#+                    e+ c#+ f#+ e+
	13:  e,g#:p_8ss8ss_2    e,g#:8 c#,c#+ e,g# c#,c#+          e,g# c#,c#+ f# c#+
	14:  c#-:p_8r8r_1       c#-:p_8r8r_1                       c#-:8 - f#- f#-2
	15:  c#-2:p_8r8r_1      c#-2:p_8r8r_1                      c#-2:8 - f#-2 f#-3
END

// m. 42/1
CALL m42_1
FUNCTION m42_1
	0:   b+2:8 a#+2 b+2
	1:   b+:8 a#+ b+
	2:   d#+,b+:8 e+,a#+ d#+,b+
	3:   b,d#+:8 a#,c#+ b
	4:   b-2,b:p_888_2
	5:   b:8 g f#
	6:   b-,f#:8 e,g b-,f#
	7:   b:8 e b
	8:   b-2,b:p_888_2
	p:   perc_all:p_888_3
	10:  b-2:p_888_1
	11:  b+:8 a#+ b+
	12:  d#+:8 e+ d#+
	13:  f#:8 g f#
	14:  b-2:p_888_1
	15:  b-3:p_888_1
END

// m. 42/2 - 49
CALL  m34_2_to_41

// m. 50-58
CALL m50_to_58
FUNCTION m50_to_58
	//   50
	0:   b+2:8
	1:   b+:8
	2:   d#+,b+:8
	3:   b,d#+:8     -:4 $p b-,f#:p_ss_2
	4:   b-2,b-:8
	5:   b:8
	6:   b-,f#:8     -:4 $p b-,f#:p_ss_2
	7:   b:8         -:4 $p b:p_ss_1
	8:   b-2,b-:8
	p:   bd2,cc2,to:8
	10:  b-2:8
	11:  b+:16 $p a#+ c#+2 a#+   b+ a#+ c#+2 a#+
	12:  d#+:8
	13:  f#:8
	14:  b-2:8
	15:  b-3:8
	CALL  v_all_p
	CALL  i_pizzicato_14    // switch violoncello 14 to pizzicato mode
	*
	
	//   51                                  52                                    53
	3:   b-,f#:p_8ss_2 b-,f#:8 e,g#          f#,a:8 $p_marcato b-,f#:4 $p f#,a:8   e,g# $p_marcato g#-,e:4 $p e,g#:8
	4:   -:2                                 -:8 b-2 c#- d#-                       e- f#- g#- a-
	6:   b-,f#:p_8ss_2 b-,f#:8 e,g#          f#,a:8 $p_marcato b-,f#:4 $p f#,a:8   e,g# $p_marcato f#-,g#-:4 $p e,g#:8
	7:   b:8 -:4 b:p_ss_1                    b:8 -:4 b:p_ss_1                      b:8 -:4 b:p_ss_1
	11:  b+ a#+ c#+2 a#+   b+ a#+ c#+2 a#+   b+ a#+ c#+2 a#+   b+ a#+ c#+2 a#+     b+ a#+ c#+2 a#+   b+ a#+ c#+2 a#+
	14:  -:2     $pp                         -:8 b-2 c#- d#-                       e- f#- g#- a-
	*
	
	//   54                                  55                                  56
	2:   -:4. b,f#+:p_ss_2                   b,f#+:p_8ss_2 b,f#+:8 e+,g#+        f#+,a+ $p_marcato b,f#+:4 $p f#+,a+:8
	3:   d#,f#:p_888_2 b-,f#:p_ss_2          b-,f#:p_8ss_2 b-,f#:8 e,g#          f#,a $p_marcato b-,f#:4 $p f#,a:8
	4:   b- b-2 b- -                         - - - -                             - b-2 c#- d#-
	5:   $pp -:4. b-,b:p_ss_2                b-,b:8 - - b-,b:p_ss_2              b-,b:8 - - b-,b:p_ss_2
	6:   b-,f# b-2,b-:p_88_2 b-,f#:p_ss_2    b-,f#:p_8ss_2 b-,f#:8 e,g#          f#,a $p_marcato b-,f#:4 $p f#,a:8
	7:   b:8
	11:  b+ a#+ c#+2 a#+   b+ a#+ c#+2 a#+   b+ a#+ c#+2 a#+   b+ a#+ c#+2 a#+   b+ a#+ c#+2 a#+   b+ a#+ c#+2 a#+
	12:  $pp b:16 a# c#+ a#   b a# c#+ a#    b a# c#+ a#   b a# c#+ a#           b a# c#+ a#   b a# c#+ a#
	14:  b- b-2 b- -                         -:2                                 -:8 b-2 c#- d#-
	*
	
	//   57                                      58/1
	2:   e+,g#+ $p_marcato g#,e+:4 $p e+,g#+:8   d#+,f#+
	3:   e,g# $p_marcato g#-,e:4 $p e,g#:8       d#,f#
	4:   e- f#- g#- a-                           b- -:4 
	5:   b-,b:8 - - b-,b:p_ss_2                  b-,b:8
	6:   e,g# $p_marcato f#-,g#-:4 $p e,g#:8     d#,f#
	11:  b+ a#+ c#+2 a#+   b+ a#+ c#+2 a#+       b+:8 b:p_ss_1 b:8
	12:  b a# c#+ a#   b a# c#+ a#               b:8
	14:  e- f#- g#- a-                           b-
	CALL i_arco_14    // switch violoncello 14 back to arco mode
	CALL  v_all_pp
	*
	
	// 58/2
	3:   b-:p_ss_1
	4:   e-:p_ss_1
	6:   g#-,b-:p_ss_2
	11:  b-:p_ss_1
	12:  g#-:p_ss_1
	13:  e-:p_ss_1
	14:  e-:p_ss_1
	15:  e-2:p_ss_1
	*
END

// m. 59-66/1
CALL m19_to_26_1(contrabass=1)

// m. 66/2-74/1
CALL v_all_pp
CALL m26_2_to_34_1(trombone_ff=1)

// m. 74/2
*
CALL  v_all_tutta_forza
CALL  d_all_legato
{  t=7:4
	0:   e+2:32 f#+2 g#+2 a+2 b+2 c#+3 d#+3
	1:   e+:32 f#+ g#+ a+ b+ c#+2 d#+2
	11:  e+:32 f#+ g#+ a+ b+ c#+2 d#+2
	12:  e:32 f# g# a b c#+ d#+
}
CALL  d_all_staccato
*

// m. 75-80
CALL m75_to_80(start=75)
FUNCTION m75_to_80
	CALL  d_all_staccato
	
	//   75                       76                       77
	0:   e+3:p_8ss88_1            g#+3:4 f#+3              e+3:8 d#+3 e+3 c#+3
	1:   e+2:p_8ss88_1            g#+2:4 f#+2              e+2:8 d#+2 e+2 c#+2
	2:   $leg b,e+:2
	2                             c+ /2 m
	2:                            g#+:4. f#+:8             c#+,e+ c+,d#+ c#+,e+ a,c#+
	3:   $leg b,e+:2
	3                             c+ /2 m
	3:                            g#+:4. f#+:8             c#+,e+ c+,d#+ c#+,e+ a,c#+
	4:   $leg b-:2                c                        c#:8 c c# a-
	5:   $leg b-,b:2              g#                       a
	6:   $leg e-,g#:2             e-,g#                    e-,e
	7:   e,e+:p_8ss88_2           e,e+:2                   e,e+:p_8888_2
	8:   $leg e-,e:1.
	p    to       /2   q=3, m, tr=/32
	p    bd2,cc2  /4   q=6
	10:  e-:p_2tr32_1             e-:p_2tr32_1             e-:p_2tr32_1
	11:  e+2:p_8ss88_1
	11                            g#+2  /4.  tr=/16
	11:                           f#+2:p_ss_1              e+2:p_ss_1 d#+2:p_ss_1 e+2:p_ss_1 c#+2:p_ss_1
	12:  e+:p_8ss88_1
	12                            g#+  /4.  tr=/16
	12:                           f#+:p_ss_1               e+:p_ss_1 d#+:p_ss_1 e+:p_ss_1 c#+:p_ss_1
	13:  b-,b:p_2tr16_2           c,c+:p_2tr16_2
	{ if ${start} == 75
		13:                                            $leg c#,c#+:p_ss_2 c,c+:p_ss_2 c#,c#+:p_ss_2 a-,a:p_ss_2
	}
	{ elsif ${start} in 83;119;127
		13:                                            c#,c#+:8 c,c+:8 c#,c#+:8 a-,a:8
	}
	14:  e-:p_2tr16_1             e-:p_2tr16_1             e-:p_2tr16_1
	15:  e-2:p_8888_1             e-2:p_8888_1             e-2:p_8888_1
	*
	CALL  v_all_ff
	CALL  d_all_staccato
	
	//   78                                    79                            80
	0:   b+2:p_8r8r_1                          a+2:p_8r8r_1                  g#+2:p_8r8r_1
	1:   b+:8 - g#+2 -                         f#+2:p_8r8r_1                 e+2:p_8r8r_1
	2:   g#,e+:8 - e+,g#+ -                    f#+,a+:p_8r8r_2               e+,g#+:p_8r8r_2
	3:   g#,b:8 - g#,e+ -                      a,f#+:p_8r8r_2                g#,e+:p_8r8r_2
	4:   g#-,b-:8 - e-2,e- -                   d#-2,d#:p_8r8r_2              e-2,e-:p_8r8r_2
	5:   b:p_8r8r_1                            a:p_8r8r_1                    b:p_8r8r_1
	6:   e-,g#:8 - g#-,e -                     b-,f#:p_8r8r_2                g#-,e:p_8r8r_2
	7:   e,e+:p_8r8r_2                         b-,b:p_8r8r_2                 e,b:p_8r8r_2
	8:   e-,e:p_8r8r_2                         d#-,d#:p_8r8r_2               e-,e:p_8r8r_2
	p:   perc_all:p_8r8r_3                     perc_all:p_8r8r_3             perc_all:p_8r8r_3
	10:  e-:p_8r8r_1                           b-2:p_8r8r_1                  e-:p_8r8r_1
	11:  b+:16 c#+2 b+ c#+2 b+ c#+2 d#+2 e+2   a+ b+ a+ b+ a+ b+ c#+2 d#+2   g#+ a+ g#+ a+ g#+ a+ b+ c#+2
	12:  b:16 c#+ b c#+ b c#+ d#+ e+           a b a b a b c#+ d#+           g# a g# a g# a b c#+
	13:  g#-,g#:p_8r8r_2                       f#,a:p_8r8r_2                 b-,g#:p_8r8r_2
	14:  e-:p_8r8r_1                           d#-:p_8r8r_1                  e-:p_8r8r_1
	15:  e-2:p_8r8r_1                          d#-2:p_8r8r_1                 e-2:p_8r8r_1
END

// m. 81-82
CALL m81_to_82
FUNCTION m81_to_82
	//   81                                   82
	0:   f#+2:p_8r8r_1                        f#+2:8 -:8. b+2:16 c#+3 d#+3
	1:   f#+2:8 - e+2 -                       d#+2:8 -:8. b+:16 c#+2 d#+2 
	2:   c#+,f#+:8 - c#+,e+ -                 d#+:8
	3:   f#,e+:p_8r8r_2                       d#+:8
	4:   a-2,a-:p_8r8r_2                      b-2,b-:8
	5:   f#:p_8r8r_1                          b-,b:8
	6:   e,f#:p_8r8r_2                        b-,f#:8
	7:   e,e+:p_8r8r_2                        b-,b:8
	8:   a-2,a-:p_8r8r_2                      b-2,b-:8
	p:   perc_all:p_8r8r_3                    perc_all:8
	10:  e-:p_8r8r_1                          b-2:8
	11:  f#+:16 g#+ f#+ g#+ f#+ g#+ f#+ g#+   f#+ g#+ f#+ d#+ b b+ c#+2 d#+2
	12:  f#:16 g# f# g# f# g# f# g#           f# g# f# d# b- b c#+ d#+
	13:  c#,e:p_8r8r_2                        b-,d#:p_8r8r_2
	14:  e-:p_8r8r_1                          b-2:8
	15:  e-2:p_8r8r_1                         b-3:8
	*
END

// m. 83-88
CALL  m75_to_80(start=83)

// m. 89
CALL m89
FUNCTION m89
	0:   f#+2:8 - b+2 -
	1:   c#+2:8 - d#+2 -
	2:   c#+,f#+:8 - d#+,f#+ -
	3:   f#,e+:8 - f#,d#+ -
	4:   a-2,a-:8 - b-2,b- -
	5:   f#:8 - b- -
	6:   e,f#:8 - b-,f# -
	7:   e:8 - b -
	8:   a-2,a-:8 - b-2,b- -
	p:   perc_all:p_8r8r_3
	10:  e-:8 - b-2 -
	11:  f#+:16 g#+ f#+ g#+ f#+ a+ g#+ f#+
	12:  f#:16 g# f# g# f# a g# f#
	13:  c#,e:8 - f#-,d# -
	14:  e-:8 - b-2 -
	15:  e-2:8 - b-3 -
END

// m. 90
0:   e+2
1:   e+2
2:   e+
3:   g#,e+
4:   e-
5:   g#
6:   g#-,e
7:   e,b
8:   e-
p:   perc_all:8
10:  e-
11:  e+:8 - $leg $sf_accent
11                 c#+  /4+/16  m
12:  e:8
13:  g#-,e
14:  e-
15:  e-2
CALL  i_pizzicato_14
CALL  i_pizzicato_15
15:       - - -
*

// m. 91-94
CALL v_all_pp
CALL d_all_staccato
CALL m91_to_94(start=91)
FUNCTION m91_to_94
	//   91                                  92                      93                           94
	4:   -:2 $leg
	4                                        c#  /2+/2+/8  m
	4:                                       -:2                     g#-,c                        
	6:   -:2 $leg                            c+,e+:2                 b,d                          c+:8
	{ if ${start} == 91
	    11: -:16 c+ c#+ c+ d#+ c#+ b a
	}
	{ else
	    11: c#+ c+ c#+ c+ d#+ c#+ b a
	}
	11:                                      a g# e c# c# c# c# c#   e d# c g#- g#- g#- g#- g#-
	{ if ${start} == 91
	    11:                                                                                       g#- c# e g# c#+ c#+ c#+ c#+
	}
	{ else
	    11:                                                                                       g#- c# e g# c#+ e+ d#+ c#+
	}
	12:  g#:8   - a     -                    g#   - - e              f#     - - d#                e
	13:  c#,e:8 - c#,f# -                    c#,e - - g#-,c#         g#-,c# - - g#-,d#            g#-,c#
	14:  c#:8   - f#-   -                    c#-  - - c#-            g#-    - - g#-2              c#-
	15:  c#-:8  - f#-2  -                    c#-2 - - c#-2           g#-2   - - g#-3              c#-2
	*
END

// m. 95-98
CALL m91_to_94(start=95)

// m. 99-100
CALL m99(start=99)
CALL m99(start=100)
FUNCTION m99
	2:   $leg c+,d#+:4. c#+,e+:8
	{ if ${start} == 99
		3: $leg
		3  g#+  /1+/4  m
	}
	11:  d#+:16 c+ g# g# g# g#+ e+ c#+
	12:  d#:8    - - e
	13:  g#-,c:8 - - g#-,c#
	14:  g#-:8   - - g#-
	15:  g#-2:8  - - g#-2
	*
END

// m. 101-102
//   101                        102
2:   b,d#+:4 a#,c#+             g#,b:8
3:   -:4        g               g#:8
4:   d#:4       d#-             g#-:8
11:  d#+ b g# g# a# f## d# d#   g# f## g# g g# a g# f#
12:  d#:8     - c#       -      b-
13:  g#-,b-:8 - f##-,a#- -      d#-,g#-
14:  d#-:8    - d#-      -      g#-
15:  d#-2:8   - d#-2     -      g#-2
*

// m. 103-104
CALL m103_to_104(start=103)
FUNCTION m103_to_104
	//   103                         104
	3:   g#-,e:4. b-,f#:8            e,g#:4. f#,a:8
	11:  e:16 b- a#- b- e b- f# b-   g# e d# e g# e a f#
	12:  b-:8 - g#- b-               e - e f#
	13:  e-,g#-:8 - - -
	{ if ${start} == 103
	    13:                          g#-,b-
	}
	{ else
	    13:                          e-,g#-
	}
	14:  e-:8     - - -              e-:p_8r8r_1
	15:  e-2:8    - - -              e-2:p_8r8r_1
	*
END

// m. 105
3:   g#,b:4   g,a#
6    c+  *2+/2+/8  m
11:  b g#+ f#+ e+ d#+ f#+ e+ c#+
12:  g#     - a#    -
13:  g#-,b- - g-,c# -
14:  e-     - e-    -
15:  e-2    - e-2   -
*

// m. 106-108
CALL m106_to_108(start=106)
FUNCTION m106_to_108
	// 106                            107                      108
	3:   g#,b:2                       f#,a
	4:   -:2                          d#                       e
	6:   -:2                          g
	11:  b c#+ b c#+ d#+ e+ f#+ g#+   a b a b c#+ d#+ e+ f#+   g# a g# a b c#+ d#+ e+
	12:  b     - g#   -               a:p_8r8r_1               g#:p_8r8r_1
	13:  g#-,e - b-,e -               b-,f#:p_8r8r_2           b-,e:p_8r8r_2
	14:  e-:p_8r8r_1                  b-2:p_8r8r_1             e-:p_8r8r_1
	15:  e-2:p_8r8r_1                 b-3:p_8r8r_1             e-2:p_8r8r_1
	{ if ${start} == 106
	    3                                                      e   /1  m
	    3:                                                     g#:2
	    6                                                      e   /1  m
	}
	{ else
	    3                                                      e   /2.  m
	    3:                                                     g#:2
	    6                                                      e   /2.  m
	}
	*
END

// m. 109-110
//   109                       110
3:   f#                        d#,f#:8
4:   a-,c#                     b-:8
6:   -:2                       b-:8
11:  f# g# f# g# f# g# f# g#   f# g# f# d# b- c c# d#
12:  f#:p_8r8r_1               f#
13:  e-,c#:p_8r8r_2            f#-,d#:8
14:  a-2:p_8r8r_1              b-2
15:  a-3:p_8r8r_1              b-3
*

// m. 111-112
CALL m103_to_104(start=111)

// m. 113
3:   g#,b:4   g,a#
6    c+  *2+4  m
11:  b g#+ f#+ e+ d#+ f#+ e+ d#+
12:  g#     - a#    -
13:  e-,g#- - g-,c# -
14:  e-     - e-    -
15:  e-2    - e-2   -
*

// m. 114-116
CALL m106_to_108(start=114)

// m. 117-118
//   117                          118
0:   -:2                          -:16   $stac $ff  e+2 f#+2 g#+2 a+2 b+2 c#+3 d#+3
1:   -:2                          -:16   $stac $ff  e+  f#+  g#+  a+  b+  c#+2 d#+2
3:   f#:2                         e,g#:8
4:   a-,c#:4 b-                   e:8
6:   -:4 b-                       e:8
11:  f# c#+ c+ c#+ d#+ c#+ a f#   e      $stac $ff  e+  f#+  g#+  a+  b+  c#+2 d#+2
12:  f#:8 - d# -                  e:16   $stac $ff  e   f#   g#   a   b   c#+  d#+
13:  c#,e:8 - f#-,a- -            e-,g#-
14:  a-2:8 - b-2 -                e-
15:  a-3:8 - b-3 -                e-2
CALL  d_all_staccato
CALL  v_all_ff
*

// m. 119-233
CALL m75_to_80(start=119)   // 119-124
CALL m81_to_82              // 125-126
CALL m75_to_80(start=127)   // 127-132
CALL m89                    // 133

// m. 134/1
0:   e+2:8 b+2 e+2
1:   e+2:8 b+ e+2
2:   e+:p_888_1
3:   g#,e+:8 g#,b g#,e+
4:   e-,b-:p_888_2
5:   b-,g#:p_888_2
6:   g#-,e:p_888_2
7:   e,b:p_888_2
8:   e-:p_888_1
p:   perc_all:p_888_3
10:  e-:p_888_1
11:  e+:8 b e+
12:  e:8 b- e
13:  g#-,e:p_888_2
14:  e-:p_888_1
15:  e-2:p_888_1

// m. 134/2-166/1
CALL v_all_ff
CALL m34_2_to_41                // 134/2-141
CALL m42_1                      // 142/1
CALL m34_2_to_41                // 142/2-149
CALL m50_to_58                  // 150-158
10:  $p                         // set timpani to piano instead of pianissimo
CALL m19_to_26_1(contrabass=1)  // 159-166/1

// m. 166/2-171
CALL  v_all_f       
//   166/2          167                168                          169                           170                         171
0:   b+2:p_ss_1     b+2:p_8ss8ss_1     e+3:8 f#+3 g#+3 b+2:p_ss_1   b+2:p_8ss_1 e+3 g#+3:p_ss_1   f#+3 d#+3 b+2 b+2:p_ss_1    b+2:p_8ss8ss_1
1:   b+:p_ss_1      b+:p_8ss8ss_1      e+2:8 f#+2 g#+2 b+:p_ss_1    b+:p_8ss_1 e+2 g#+2:p_ss_1    f#+2 d#+2 b+ b+:p_ss_1      b+:p_8ss8ss_1
2:   b:p_ss_1       b:p_8ss8ss_1       e+:8 f#+ g#+ b:p_ss_1        b:p_8ss_1 e+ g#+:p_ss_1       f#+ d#+ b b:p_ss_1          b:p_8ss8ss_1
3:   b:p_ss_1       b:p_8ss8ss_1       e+:8 f#+ g#+ b:p_ss_1        b:p_8ss_1 e+ g#+:p_ss_1       f#+ d#+ b b:p_ss_1          b:p_8ss8ss_1
4:   g#-,e:p_ss_2   g#-,e:p_8ss8ss_2   g#-,e:p_888ss_2              g#-,e:p_8ss8ss_2              b-2,f#:p_888_2 b-:p_ss_1    g#-,e:p_8ss8ss_2
5:   -:8            b-,g#:p_r8r8_2     b-,g#:p_r8r8_2               b-,g#:p_r8r8_2                b-,g#:p_r8r8_2              b-,g#:p_r8r8_2
6:   e,g#:p_ss_2    e,g#:p_8ss8ss_2    e,g#:p_888ss_2               e,g#:p_8ss8ss_2               b-,f#:p_888_2 e,g#:p_ss_2   e,g#:p_8ss8ss_2
7:   -:8            e,b:p_r8r8_2       e,b:p_r8r8_2                 e,b:p_r8r8_2                  b-,b:p_r8r8_2               e,b:p_r8r8_2
8:   -:8            e-,e:p_8r8r_2      e-,e:p_8r8r_2                e-,e:p_8r8r_2                 b-2,b-:p_8r8r_2             e-,e:p_8r8r_2
p:   -:8            perc_all:perc167   perc_all:perc167             perc_all:perc167              perc_all:perc167            perc_all:perc167
10:  e-:p_ss_1      e-:p_8ss8ss_1      e-:p_888ss_1                 e-:p_8ss8ss_1                 b-2:p_888_1 e-:p_ss_1       e-:p_8ss8ss_1
11:  b:p_ss_1       b:p_8ss8ss_1       e+:8 f#+ g#+ b:p_ss_1        b:p_8ss8ss_1                  f#+ d#+ b b                 b:p_8ss8ss_1
12:  -:8            b-,g#:p_2tr16_2    b-,g#:p_2tr16_2              b-,g#:p_2tr16_2               b-,f#:p_2tr16_2             b-,g#:p_2tr16_2
13:  -:8            e-,e:p_2tr16_2     e-,e:p_2tr16_2               e-,e:p_2tr16_2                b-,d#:p_2tr16_2             e-,e:p_2tr16_2
14:  -:8            e-:p_8r8r_1        e-:p_8r8r_1                  e-:p_8r8r_1                   b-2:p_8r8r_1                e-:p_8r8r_1
15:  -:8            e-2:p_8r8r_1       e-2:p_8r8r_1                 e-2:p_8r8r_1                  b-3:p_8r8r_1                e-2:p_8r8r_1

// m. 172-173
//   172                          173
0:   e+3 f#+3 g#+3 e+2:16 g#+2    $leg b+2:4+16  $stac a+2:16  g#+2   f#+2
1:   e+2 f#+2 g#+2 e+:16 g#+      $leg b+:4+16   $stac a+:16   g#+    f#+
2:   e+ f#+ g#+ e+:16 g#+         $leg b+:4+16   $stac a+:16   g#+    f#+
3:   e+ f#+ g#+ e,e+:16 g#,g#+    $leg b,b+:4+16 $stac a,a+:16 g#,g#+ f#,f#+
4:   g#-,e:p_888_2 g#-,e:p_ss_2   f#-,d#:p_8ss88_2
5:   b-,g#:p_r8r8_2               b-,g#:p_r8r8_2
6:   e,g#:p_888ss_2               b-,f#:p_8ss88_2
7:   e,b:p_r8r8_2                 b-,b:p_r8r8_2
8:   e-,e:p_8r8r_2                b-,b-2:p_8r8r_2
p:   perc_all:perc167             perc_all:perc167
10:  e-:p_888ss_1                 b-2:p_8ss88_1
11:  e+ f#+ g#+ e+,g#+:p_ss_2     $leg b+:4+16   $stac a+:16   g#+    f#+
12:  b-,g#:p_2tr16_2              d#,b:p_2tr16_2
13:  e-,e:p_2tr16_2               b-,f#:p_2tr16_2
14:  e-:p_8r8r_1                  b-2:p_8r8r_1
15:  e-2:p_8r8r_1                 b-3:p_8r8r_1

// m. 174-177
CALL m174_to_177(start=174)
FUNCTION m174_to_177
	CALL d_all_legato
	//   174                               175                                    176                            177
	0:   e+2:8. a+2:16 g#+2:8. c#+3:16     b+2 c#+3 d#+3 e+3 d#+3 e+3 f#+3 g#+3   a+3:1
	1:   e+:8.  a+:16  g#+:8.  c#+2:16     b+  c#+2 d#+2 e+2 d#+2 e+2 f#+2 g#+2   a+2:1
	2:   e+,g#+:1                          $stac                                  f#+,a+:8 f#+,a+:4 f#+,a+:8+8   f#+,a+:8 f#+,a+:4
	3:   g#,e+:1                           $stac                                  a,f#+:8  a,f#+:4  a,f#+:8+8    a,f#+:8  a,f#+:4
	4:   e-:8.    e:16 e:4+8               $stac b-:8 g#- e-                      b-2 c- c#- d-                  d#- f#- b- b-2
	5:   b-,g#:8. b-,g#:16 b-,g#:4+8       $stac b-,g#:p_888_2                    a:4 a                          a a
	6:   e,g#:8. e,g#:16 e,g#:4+8          $stac e,g#:p_888_2                     f#,a:4 f#,a                    f#,a f#,a
	7:   e,b:8. e,b:16 e,b:4+8             $stac e,b:p_888_2                      -:8 f#+:4 f#+:8+8              f#+:4 f#+:8
	{ if ${start} in 174;198
	    8:  e-,e:2                         $stac e:8
	}
	{ else
	    8:  e-,e:8. e:16 e:4+8
	}
	8:                                     $stac b-:8 g#- e-                      b-2,b- c-,c c#-,c# d-,d        d#-,d# f#-,f# b-2,b- b-2,b-
	p:   perc_all:perc167                  perc_all:perc167                       to:8 perc_all:p_888_3          perc_all:p_8888_3
	10:  e-:p_2tr32_1                      $stac e-:p_2tr32_1                     b-2:p_8888_1                   b-2:p_8888_1
	11:  e+:16 f#+ g#+ a+ g#+ a+ b+ c#+2   b+ c#+2 d#+2 e+2 d#+2 e+2 f#+2 g#+2    $stac a+2:p_2tr16_1            a+2:p_2tr16_1
	12:  e:16  f#  g#  a  g#  a  b  c#+    b  c#+  d#+  e+  d#+  e+  f#+  g#+     $stac a+:p_2tr16_1             a+:p_2tr16_1
	13:  $stac e,g#:p_2tr16_2              e,g#:p_2tr16_2                         f#,f#+:p_2tr16_2               f#,f#+:p_2tr16_2
	14:  e-:8.  e:16  e:4+8                $stac b-:8  g#-  e-                    b-2 c-  c#-  d-                d#-  f#-  b-  b-2
	15:  e-2:8. e-:16 e-:4+8               $stac b-2:8 g#-2 e-2                   b-3 c-2 c#-2 d-2               d#-2 f#-2 b-2 b-3
END

// m. 178-181
CALL m174_to_177(start=178)

// m. 182-185
CALL m182_to_183(start=182)   // 182-183
CALL m182_to_183(start=184)   // 184-185
FUNCTION m182_to_183
	CALL d_all_staccato
	//   182                                             183
	0:   g#+3:8   - d#+3     -                           e+3    - f#+3    -
	1:   g#+2:8   - d#+2     -                           e+2    - f#+2    -
	2:   e+,g#+:8 - c+,g#+   -                           c#+,e+ - d#+,b+  -
	3:   g#,e+:8  - c#,d#+   -                           c#+,e+ - d#+,f#+ -
	4:   e-,e:8   - g#-2,g#- -                           c#-,c# - b-2,b-  -
	5:   g#:p_8r8r_1                                     g#:8   - b       - 
	6:   e,g#:8   - f#,g#    -                           e,g#   - b-,f#   -
	{ if ${start} in 184;208
	    7:  e+,g#:8
	}
	{ else
	    7:  e+:8
	}
	7:            - g#       -                           e+     - b       - 
	8:   e-,e:8   - g#-2,g#- -                           c#-,c# - b-2,b-  -
	p:   perc_all:p_8r8r_3                               perc_all:p_8r8r_3
	10:  e-:p_8r8r_1                                     e-:8   - b-2     -
	11:  g#+2:p_ssss_1 $leg g#+2:16 $stac d#+2:p_sss_1   $leg d#+2 $stac e+2:p_sss_1 $leg e+2 $stac f#+2:p_sss_1
	12:  g#+:p_ssss_1  $leg g#+:16  $stac d#+:p_sss_1    $leg d#+  $stac e+:p_sss_1  $leg e+  $stac f#+:p_sss_1
	13:  e,e+:8 - g#,c+:p_4tr16_2                        e,c#+  - d#,b:p_4tr16_2
	14:  e-:8   - g#-2 -                                 c#-    - b-2     -
	15:  e-2:8  - g#-3 -                                 c#-2   - b-3     -
END

// m. 186-197
CALL m186_to_197(start=186)
FUNCTION m186_to_197
	CALL  d_all_legato
	CALL  v_all_sf
	//   186 - 187                               188 - 189                                         190 - 191
	0:   g+3:2+8 $stac $f e+3:16 e+3 c+3:8 e+3   $sf $leg g#+3:2+8 $stac $f e+3:16 e+3 b+2:8 e+3   $sf $leg g#+3:2+8 $stac $f f+3:16 f+3 c#+3:8 f+3
	1:   g+2:2+8 $stac $f e+2:16 e+2 c+2:8 e+2   $sf $leg g#+2:2+8 $stac $f e+2:16 e+2 b+:8  e+2   $sf $leg g#+2:2+8 $stac $f f+2:16 f+2 c#+2:8 f+2
	2:   c+,c+2:2+8                     -:4+8    $sf $leg e+,b+:2+8                    -:4+8       $sf $leg f+,g#+:2+8                    -:4+8
	3:   c+,g+:2+8 $stac $f e+:16 e+ c+:8 e+     $sf $leg g#+:2+8  $stac $f e+:16  e+  b:8   e+    $sf $leg g#+:2+8 $stac $f f+:16 f+ c#+:8 f+
	4:   e-2,e-:2+8                     -:4+8    $sf $leg e-2,e-:2+8                   -:4+8       $sf $leg c#-,c#:2+8                    -:4+8
	5:   g-,g:2+8                       -:4+8    $sf $leg b-,b:2+8                     -:4+8       $sf $leg g#:2+8                        -:4+8
	6:   e-,e:2+8                       -:4+8    $sf $leg e-,g#:2+8                    -:4+8       $sf $leg f,g#:2+8                      -:4+8
	7:   e,e+:2+8                       -:4+8    $sf $leg g#,e+:2+8                    -:4+8       $sf $leg b:2+8                         -:4+8
	8:   e-,e:2+8                       -:4+8    $sf $leg e-,e:2+8                     -:4+8       $sf $leg c#-,c#:2+8                    -:4+8
	p:   perc_all:perc186_to_187                 perc_all:perc186_to_187                           perc_all:perc186_to_187
	10:  e-:p_2tr32_1   $stac $f e-:8   -:4+8    $sf $leg e-:p_2tr32_1  $stac $f e-:8  -:4+8       $sf $leg e-:p_2tr32_1  $stac $f e-:8   -:4+8
	13:  e,c+:p_2tr16_2 $stac $f e,c+:8 -:4+8    $sf $leg e,b:p_2tr16_2 $stac $f e,b:8 -:4+8       $sf $leg f,b:p_2tr16_2 $stac $f f,b:8  -:4+8
	14:  c:p_2tr16_1    $stac $f c:8    -:4+8    $sf $leg b-:p_2tr16_1  $stac $f b-:8  -:4+8       $sf $leg c#:p_2tr16_1  $stac $f c#:8   -:4+8
	15:  e-2:8    $stac $f e-2:p_8888_1 -:4+8    $sf $leg e-2:8 $stac $f e-2:p_8888_1  -:4+8       $sf $leg c#-2:8 $stac $f c#-2:p_8888_1 -:4+8
	CALL  d_all_legato
	CALL  v_all_sf
	//   192 - 193                                     194 - 195                              196 - 197
	0:   a#+3:2+8 $stac $f g+3:16 g+3 e+3:8 g+3        b+3 a#+3 a+3 g#+3 f#+3 e+3 d#+3 c#+3   b+3 a#+3 a+3 g#+3 f#+3 e+3 d#+3 f#+3
	1:   a#+2:2+8 $stac $f g+2:16 g+2 e+2:8 g+2        b+2 a#+2 a+2 g#+2 f#+2 e+2 d#+2 c#+2   b+2 a#+2 a+2 g#+2 f#+2 e+2 d#+2 f#+2
	2:   g+,bb+:2+8       $f            -:4+8          $leg g#+,b+:2 e+,g#+                   $leg  f#+,a+  d#+,f#+
	3:   a#,a#+:2+8 $stac $f g,g+:p_ss_2 e,e+:8 g,g+   $leg b,e+:2+2                          $leg  a,d#+
	4:   c-,c:2+8         $f            -:4+8          $stac b-2,b:p_8888_2 b-2,b:p_8888_2    b-2,b:p_8888_2    b-2,b:p_8888_2
	5:   g:2+8            $f            -:4+8          b-,b:2+2                               b-,a
	6:   e-,e:2+8         $f            -:4+8          e,g#:2+2                               b-,f#
	7:   e,e+:2+8         $f            -:4+8          g#,e+:2+2                              b-,b
	8:   c-,c:2+8         $f            -:4+8          b-2,b-:2+2                             b-2,b-
	p:   perc_all:perc186_to_187   $f                  perc_all:perc194   perc_all:perc194    perc_all:perc194   perc_all:perc194
	10:  e-:p_2tr32_1   $stac $f e-:8   -:4+8          b-2:p_2tr32_1      b-2:p_2tr32_1       b-2:p_2tr32_1      b-2:p_2tr32_1
	13:  g,e+:p_2tr16_2 $stac $f g,e+:8 -:4+8          g#,e+:p_2tr16_2    g#,e+:p_2tr16_2     d#,b:p_2tr16_2     d#,b:p_2tr16_2
	14:  c:p_2tr16_1    $stac $f c:8    -:4+8          b-:p_2tr16_1       b-:p_2tr16_1        b-2:p_2tr16_1      b-2:p_2tr16_1
	15:  c-2:8    $stac $f c-2:p_8888_1 -:4+8          b-3:p_8888_1       b-3:p_8888_1        b-3:p_8888_1       b-3:p_8888_1
	
	//   186           187                                           188
	11:  g+2:p_2tr16_1 $f $stac g+2:16 g+2 e+2 e+2 c+2 c+2 e+2 e+2   $sf $leg g#+2:p_2tr16_1 $f $stac
	12:  g+:p_2tr16_1  $f $stac g+:16 g+ e+ e+ c+ c+ e+ e+           $sf $leg g#+:p_2tr16_1  $f $stac
	
	//   189                                        190            191                                            192
	11:  g#+2 g#+2 e+2 e+2 b+ b+ e+2 e+2 $sf $leg   g#+2:p_2tr16_1 $f $stac g#+2 g#+2 f+2 f+2 c#+2 c#+2 f+2 f+2   $sf a#+2:p_2tr16_1 $f
	12:  g#+  g#+  e+  e+  b  b  e+  e+  $sf $leg   g#+:p_2tr16_1  $f $stac g#+  g#+  f+  f+  c#+  c#+  f+  f+    $sf a#+:p_2tr16_1  $f
	
	{ if ${start} == 186
	    //   193                  194 - 195                              196 - 197
	    11:  a#+2:8 g+2 e+2 g+2   b+2 a#+2 a+2 g#+2 f#+2 e+2 d#+2 c#+2   b+ a#+ a+ g#+ f#+ e+ d#+ f#+
	    12:  a#+:8  g+  e+  g+    b+  a#+  a+  g#+  f#+  e+  d#+  c#+    b  a#  a  g#  f#  e  d#  f#
	}
	{ elsif ${start} == 210
	    //   217                                            218
	    11:  a#+2:p_ss_1 g+2:p_ss_1 e+2:p_ss_1 g+2:p_ss_1   b+2:p_ss_1 a#+2:p_ss_1 a+2:p_ss_1 g#+2:p_ss_1
	    12:  a#+:p_ss_1  g+:p_ss_1  e+:p_ss_1  g+:p_ss_1    b+:p_ss_1  a#+:p_ss_1  a+:p_ss_1  g#+:p_ss_1
	    
	    //   219                                              220
	    11:  f#+2:p_ss_1 e+2:p_ss_1 d#+2:p_ss_1 c#+2:p_ss_1   b+:p_ss_1 a#+:p_ss_1 a+:p_ss_1 g#+:p_ss_1
	    12:  f#+:p_ss_1  e+:p_ss_1  d#+:p_ss_1  c#+:p_ss_1    b:p_ss_1  a#:p_ss_1  a:p_ss_1  g#:p_ss_1
	    
	    //   221
	    11:  f#+:p_ss_1 e+:p_ss_1 d#+:p_ss_1 f#+:p_ss_1
	    12:  f#:p_ss_1  e:p_ss_1  d#:p_ss_1  f#:p_ss_1
	}
END

// m. 198-221
CALL m174_to_177(start=198)   // 198-201
CALL m174_to_177(start=202)   // 202-205
CALL m182_to_183(start=206)   // 206-207
CALL m182_to_183(start=208)   // 208-209
CALL m186_to_197(start=210)   // 210-221

// m. 222-225
CALL d_all_legato
//   222                                           223              224                              225
0:   e+3:16 d#+3 e+3 d#+3 e+3:8 $stac b+2:p_ss_1   b+2:p_8ss8ss_1   e+3:8 f#+3 g#+3 $ff b+2:p_ss_1   b+2:p_8ss8ss_1
1:   e+2:16 d#+2 e+2 d#+2 e+2:8 $stac b+:p_ss_1    b+:p_8ss8ss_1    e+3:8 f#+3 g#+3 $ff b+:p_ss_1    b+:p_8ss8ss_1
2:   e+,g#+:4+8                 $stac b:p_ss_1     b:p_8ss8ss_1     e+:8  f#+  g#+  $ff b:p_ss_1     b:p_8ss8ss_1
3:   g#,e+:4+8                  $stac b:p_ss_1     b:p_8ss8ss_1     e+:8  f#+  g#+  $ff b:p_ss_1     b:p_8ss8ss_1
4:   e-:4+8                     $stac b-:p_ss_1    b-:p_8ss8ss_1    e:8   f#   g#   $ff b-:p_ss_1    b-:p_8ss8ss_1
5:   b-,g#:4+8                  -:8
6:   g#-,e:4+8                  $stac b-:p_ss_1    b-:p_8ss8ss_1    e:8   f#   g#   $ff b-:p_ss_1    b-:p_8ss8ss_1
7:   e,b:4+8                    -:8
8:   e-:4+8                     -:8
p:   perc_all:4
10:  e-:p_4tr32_1 e-:8
11:  e+:16 d#+ e+ d#+ e+:8      -:8                -:2              -:4 -:8  $stac  $ff b:p_ss_1     b:p_8ss8ss_1
12:  e:16  d#  e  d#  e:8       -:8                -:2              -:4 -:8  $stac  $ff b:p_ss_1     b:p_8ss8ss_1
13:  e,g#:p_4tr16_2     e,g#:8  -:8                -:2              -:4 -:8  $stac  $ff b-:p_ss_1    b-:p_8ss8ss_1
14:  e-:16  d#-  e-  d#-  e-:8  -:8                -:2              -:4 -:8  $stac  $ff b-:p_ss_1    b-:p_8ss8ss_1
15:  e-2:8                                                                   $stac

// m. 226-229
//   226              227               228              229
0:   g#+3 a+3 b+3 -   e+3 f#+3 g#+3 -   g#+2 a+2 b+2 -   -:2
1:   g#+2 a+2 b+2 -   e+3 f#+3 g#+3 -   g#+  a+  b+  -
2:   g#+  a+  b+  -   e+  f#+  g#+  -   g#   a   b   -
3:   g#+  a+  b+  -   e+  f#+  g#+  -   g#   a   b   -
4:   g#   a   b   -   e   f#   g#   -   g#-  a-  b-  -
6:   g#   a   b   -   e   f#   g#   -   g#-  a-  b-  -
11:  g#+  a+  b+  -   e   f#   g#   -   
12:  g#+  a+  b+  -   e   f#   g#   -   
13:  g#   a   b   -   e   f#   g#   -   g#-  a-  b-  -
14:  g#   a   b   -   e   f#   g#   -   g#-  a-  b-  -
*

// m. 230-231
CALL v_all_sf
//   230                                231
0:   $leg d#+3:2+2
1:   $leg d#+2:2+2
2:   $leg d#+,b+:2+2
3:   $leg d#+,f#+:2+2
4:   $leg b-2,d#:2+2
5:   $leg b-,b:2+2
6:   $leg b-,f#:2+2
7:   $leg b:2+2
8:   $leg b-2,b-:2+2
p:   perc_all:perc167                   $ff perc_all:perc167
10:  $leg b-2:p_2tr32_1                 $ff b-2:p_2tr32_1
11:  b:16 $ff c+ c#+ d+ d#+ e+ f+ f#+   g+ g#+ a+ a#+ b+ c+2 c#+2 d#+2
12:  b-:16 $ff c c#  d  d#  e  f  f#    g  g#  a  a#  b  c+  c#+  d#+
13:  f#,a:p_2tr16_2                     $ff f#,a:p_2tr16_2
14:  b-:p_2tr16_1                       $ff b-:p_2tr16_1
15:  b-3:8 $ff b-3:p_888_1              b-3:p_8888_1
CALL v_all_ff

// m. 232-235
*
CALL d_all_staccato
{ q=4
	{ q=2
		0:   e+3:8       d#+3
		1:   e+3:8       d#+3
		2:   e+,g#+:8    d#+,b+
		3:   e+,g#+:8    d#+,a+
		4:   e-,e:8      b-2,b-
		5:   b-,b:8      b-,b
		6:   e,g#:8      b-,f#
		7:   e:8         b
		8:   e-,e:8      b-2,b-
		10:  e-:8        b-2
		11:  e+2:16 d#+2 f#+2 d#+2
		12:  e+:16  d#+  f#+  d#+
		13:  e,g#:8      f#,a
		14:  e-:8        b-2
		15:  e-2:8       b-3
	}
	p:   perc_all:perc232
}

// m. 236-243
{
	//   236                   237                  238                 239
	0:   e+3:p_8ss88_1         e+3:8 b+2:p_ss88_1   b+2 g#+2:p_ss88_1   g#+2 e+2:p_ss88_1
	1:   e+2:p_8ss88_1         e+2:8 b+:p_ss88_1    b+  g#+:p_ss88_1    g#+  e+:p_ss88_1
	11:  e+2:8 e+2:p_ss4tr16   e+2:8 b+:p_ss4tr16   b+ g#+:p_ss4tr16    g#+  e+:p_ss4tr16
	
	{ m //   236-244/1
	    2:   $leg e+,g#+:*4+8
	    3:   $leg b,g#+:*4+8
	    
	    //   236-239          240-241/1             241/2-242/1     242/2-243/1       243/2-244/1
	    4:   $leg e-2,e-:*2   e-2,e-:8  e-,e:4.+8   b-2,b-          g#-2,g#-          e-2,e-
	    8:   $leg e-,e:*2     -:8 e-,e:4. -:8       b-2,b-:4. -:8   g#-2,g#-:4. -:8   e-:4.+8
	}
	{ q=8 // 236-243
	    5:   -:8 b-,b:4.
	    6:   -:8 e-,g#:4.
	    7:   -:8 g#,e+:4.
	    p:   perc_all:perc236
	    10:  e-:p_2tr32_1
	}
	{ q=4 // 236-239
	    12:  g#,e+:p_2tr16_2
	    13:  e,b:p_2tr16_2
	    14:  e-:p_2tr16_1
	    15:  e-2:p_8888_1
	}
	{ q=4 // 240-243
	    12:  b-,g#:p_2tr16_2
	    13:  e-,e:p_2tr16_2
	}
	
	//   240                 241                242                 243
	0:   e+2 e+3:p_ss88_1    e+3 b+2:p_ss88_1   b+2 g#+2:p_ss88_1   g#+2 e+2:p_ss88_1
	1:   e+  e+2:p_ss88_1    e+2 b+:p_ss88_1    b+  g#+:p_ss88_1    g#+  e+:p_ss88_1
	11:  e+  e+:p_ss4tr16    e+  b:p_ss4tr16    b   g#:p_ss4tr16    g#   e:p_ss4tr16
	14:  e-:8 e:p_888_1      e   b-:p_888_1     b-  g#-:p_888_1     g#-  e-:p_888_1
	15:  e-2:8 e-:p_888_1    e-  b-2:p_888_1    b-2 g#-2:p_888_1    g#-2 e-2:p_888_1
}
*

// m. 244-248
CALL d_all_staccato
//   244                          245                   246                         247                           248
0:   e+2:8 -:8+4                  -:2                   -:8 b+  e+2 b+              g#+2 e+2 b+2 g#+2             e+3:4 -:8 e+3:p_ss_1
1:   e+:8  -:8+4                  -:2                   -:8 b   e+  b               g#+  e+  b+  g#+              e+2:4 -:8 e+2:p_ss_1
2:   -:2                          -:2                   -:8 b   e+  b               g#+  e+  b+  g#+              e+:4  -:8 g#+,b+:p_ss_2
3:   -:8 b-  e  b-                g#    e   b   g#      e+  b   e+  b               g#+  e+  b+  g#+              e+:4  -:8 b,g#+:p_ss_2
4:   -:8 b-2 e- b-2               g#-   e-  b-  g#-     e   b-2 e-  b-2             g#-  e-  b-  g#-              e:4
6:   -:8 b-  e  b-                g#    e   b   g#      e   b-  e   b-              g#   e   b   g#               e:4
7:   -:8 b-  e  b-                g#    e   b   g#      e   b   e+  b               g#+  e+  b   g#               e:4
8:   -:2                          -:2                   -:8 b-2 e-  b-2             g#-  e-  b-  g#-              e:4
p:   perc_all:8 -:8+4
10:  e-:8  -:8+4                  -:2                   -:8 b-2:p_888_1             b-2:p_8888_1                  e-:4  -:8 e-:p_ss_1
11:  e:8     b-:16 b- e e b- b-   g# g# e e b b g# g#   e+:8 b:16  b  e+ e+ b  b    g#+ g#+ e+ e+ b+ b+ g#+ g#+   e+2:4 -:8 e+2:p_ss_1
12:  b-,g#:8 b-:16 b- e e b- b-   g# g# e e b b g# g#   e+:8 b:16  b  e+ e+ b  b    g#+ g#+ e+ e+ b+ b+ g#+ g#+   e+2:4 -:8 b,g#+:p_ss_2
13:  e-,e:8  b-:16 b- e e b- b-   g# g# e e b b g# g#   e+:8 b-:16 b- e  e  b- b-   g#  g#  e  e  b  b  g#  g#    e+:4  -:8 g#,e+:p_ss_2
14:  e-:8  -:8+4                  -:2                   -:8 b-2 e-  b-2             g#-  e-  b-  g#-              e:4   -:8 e:p_ss_1
15:  e-2:8 -:8+4                  -:2                   -:8 b-3 e-2 b-3             g#-2 e-2 b-2 g#-2             e-:4  -:8 e-:p_ss_1
*

// m. 249-252
//   249                 250                       251                       252
0:   e+3:p_8888_1        e+3:4    -:8. e+3:16      e+3:4    -:8. e+2:16      $leg e+2:2
1:   e+2:p_8888_1        e+2:4    -:8. e+2:16      e+2:4    -:8. e+:16       $leg e+:2
2:   g#+,b+:p_8888_2     g#+,b+:4 -:8. e+,g#+:16   e+,g#+:4 -:8. g#,e+:16    $leg g#,e+:2
3:   b,g#+:p_8888_2      b,g#+:4  -:8. g#+,e+:16   g#,e+:4  -:8. g#,e+:16    $leg g#,e+:2
4:   e:8 b- g#- b-       e-:4     -:8. e-2,e-:16   e-2,e-:4 -:8. e-2,e-:16   $leg e-2,e-:2
5:   b-,b:p_8888_2       b-,b:4   -:8. b-,b:16     b-,b:4   -:8. b-:16       $leg b-:2
6:   e,g#:p_8888_2       e,g#:4   -:8. e,g#:16     e,g#:4   -:8. g#-,e:16    $leg g#-,e:2
7:   g#,e+:p_8888_2      g#,e+:4  -:8. g#,e+:16    g#,e+:4  -:8. e,b:16      $leg e,b:2
8:   e:8 b- g#- b-       e-:4     -:8. e-,e:16     e-,e:4   -:8. e-:16       $leg e-:2
p:   perc_all:perc167    perc_all:4 -:4            perc_all:4 -:4            perc_all:2
10:  e-:p_8888_1         e-:4     -:8. e-:16       e-:4     -:8. e-:16       $leg e-:p_2tr32_1
11:  e+2:p_8888_1        e+2:4    -:8. e+2:16      e+2:4    -:8. g#-,e:16    $leg g#-,e:2
12:  b,g#+:p_8888_2      b,g#+:4  -:8. b,g#+:16    b,g#+:4  -:8. b-:16       $leg b-:2
13:  g#,e+:p_8888_2      g#,e+:4  -:8. e,b:16      e,b:4    -:8. g#-,e:16    $leg g#-,e:2
14:  e:8  b-  g#-  b-    e-:4     -:8. e-:16       e-:4     -:8. e-:16       $leg e-:2
15:  e-:8 b-2 g#-2 b-2   e-2:4    -:8. e-2:16      e-2:4    -:8. e-2:16      $leg e-2:2

////////////////////////////////////////////////////////
// HELPER FUNCTIONS
////////////////////////////////////////////////////////

// functions to switch instruments between arco and pizzicato
FUNCTION i_arco_14
	INSTRUMENT  14  CELLO              Violoncello
END

FUNCTION i_pizzicato_14
	INSTRUMENT  14  PIZZICATO_STRINGS  Violoncello
END

FUNCTION i_arco_15
	INSTRUMENT  15  CONTRABASS         Double Bass
END

FUNCTION i_pizzicato_15
	INSTRUMENT  15  PIZZICATO_STRINGS  Double Bass
END

// functions for setting all channels to staccato or legato
FUNCTION d_all_staccato
	0:  $stac
	1:  $stac
	2:  $stac
	3:  $stac
	4:  $stac
	5:  $stac
	6:  $stac
	7:  $stac
	8:  $stac
	10: $stac
	11: $stac
	12: $stac
	13: $stac
	14: $stac
	15: $stac
END

FUNCTION d_all_legato
	0:  $leg
	1:  $leg
	2:  $leg
	3:  $leg
	4:  $leg
	5:  $leg
	6:  $leg
	7:  $leg
	8:  $leg
	10: $leg
	11: $leg
	12: $leg
	13: $leg
	14: $leg
	15: $leg
END

// functions for setting velocities in all channels
FUNCTION v_all_tutta_forza
	0:  $tutta_forza
	1:  $tutta_forza
	2:  $tutta_forza
	3:  $tutta_forza
	4:  $tutta_forza
	5:  $tutta_forza
	6:  $tutta_forza
	7:  $tutta_forza
	8:  $tutta_forza
	p:  $tutta_forza
	10: $tutta_forza
	11: $tutta_forza
	12: $tutta_forza
	13: $tutta_forza
	14: $tutta_forza
	15: $tutta_forza
END

FUNCTION v_all_sf
	0:  $sf
	1:  $sf
	2:  $sf
	3:  $sf
	4:  $sf
	5:  $sf
	6:  $sf
	7:  $sf
	8:  $sf
	p:  $sf
	10: $sf
	11: $sf
	12: $sf
	13: $sf
	14: $sf
	15: $sf
END

FUNCTION v_all_ff
	0:  $ff
	1:  $ff
	2:  $ff
	3:  $ff
	4:  $ff
	5:  $ff
	6:  $ff
	7:  $ff
	8:  $ff
	p:  $ff
	10: $ff
	11: $ff
	12: $ff
	13: $ff
	14: $ff
	15: $ff
END

FUNCTION v_all_f
	0:  $f
	1:  $f
	2:  $f
	3:  $f
	4:  $f
	5:  $f
	6:  $f
	7:  $f
	8:  $f
	p:  $f
	10: $f
	11: $f
	12: $f
	13: $f
	14: $f
	15: $f
END

FUNCTION v_all_p
	0:  $p
	1:  $p
	2:  $p
	3:  $p
	4:  $p
	5:  $p
	6:  $p
	7:  $p
	8:  $p
	p:  $p
	10: $p
	11: $p
	12: $p
	13: $p
	14: $p
	15: $p
END

FUNCTION v_all_pp
	0:  $pp
	1:  $pp
	2:  $pp
	3:  $pp
	4:  $pp
	5:  $pp
	6:  $pp
	7:  $pp
	8:  $pp
	p:  $pp
	10: $pp
	11: $pp
	12: $pp
	13: $pp
	14: $pp
	15: $pp
END

////////////////////////////////////
// define non-percussion patterns
////////////////////////////////////

// like the first two measures
PATTERN p_intro_1    // one single note
	: 0:4. 0:16 0    0:4. 0:16 0
END
PATTERN p_intro_2    // chord with two notes
	: 0,1:4. 0,1:16 0,1    0,1:4. 0,1:16 0,1
END

// 16th 16th
PATTERN p_ss_1    // one single note
	: 0:16 0
END
PATTERN p_ss_2    // chord with two notes
	: 0,1:16 0,1
END

// 16th 16th 16th
PATTERN p_sss_1    // one single note
	: 0:16 0 0
END


// 16th 16th 16th 16th
PATTERN p_ssss_1    // one single note
	: 0:16 0 0 0
END


// 8th 8th
PATTERN p_88_1    // one single note
	: 0:8  0
END
PATTERN p_88_2    // chord with two notes
	: 0,1:8  0,1
END

// 8th 16th 16th
PATTERN p_8ss_1    // one single note
	: 0:8  0:16 0
END
PATTERN p_8ss_2    // chord with two notes
	: 0,1:8  0,1:16 0,1
END

// 8th 16th 16th 8th 8th
PATTERN p_8ss88_1    // one single note
	: 0:p_8ss_1  0:p_88_1
END
PATTERN p_8ss88_2    // chord with two notes
	: 0,1:p_8ss_2  0,1:p_88_2
END

// 8th 16th 16th 8th 16th 16th
PATTERN p_8ss8ss_1    // one single note
	: 0:p_8ss_1  0:p_8ss_1
END
PATTERN p_8ss8ss_2    // chord with two notes
	: 0,1:p_8ss_2  0,1:p_8ss_2
END

// 8th 8th 8th 16th 16th
PATTERN p_888ss_1    // one single note
	: 0:8 0 0   0:16 0
END
PATTERN p_888ss_2    // chord with two notes
	: 0,1:8 0,1 0,1   0,1:16 0,1
END

// 8th 8th 8th
PATTERN p_888_1    // one single note
	: 0:8 0 0
END
PATTERN p_888_2    // chord with two notes
	: 0,1:8 0,1 0,1
END
PATTERN p_888_3    // chord with three notes
	: 0,1,2:8 0,1,2 0,1,2
END

// 8th (8th rest) 8th (8th rest)
PATTERN p_8r8r_1    // one single note
	: 0:8 - 0 -
END
PATTERN p_8r8r_2    // chord with two notes
	: 0,1:8 - 0,1 -
END
PATTERN p_8r8r_3    // chord with three notes
	: 0,1,2:8 - 0,1,2 -
END

// (8th rest) 8th (8th rest) 8th
PATTERN p_r8r8_2    // chord with two notes
	: -:8 0,1 - 0,1
END


// 8th 8th 8th 8th
PATTERN p_8888_1    // one single note
	: 0:8 0 0 0
END
PATTERN p_8888_2    // chord with two notes
	: 0,1:8 0,1 0,1 0,1
END
PATTERN p_8888_3    // chord with three notes
	: 0,1,2:8 0,1,2 0,1,2 0,1,2
END

// 8th 8th 8th (8th rest)
PATTERN p_888r_1    // one single note
	: 0:8 0 0 -
END
PATTERN p_888r_2    // chord with two notes
	: 0,1:8 0,1 0,1 -
END
PATTERN p_888r_3    // chord with three notes
	: 0,1,2:8 0,1,2 0,1,2 -
END

// 16th 16th 8th 8th
PATTERN p_ss88_1    // one single note
	: 0:p_ss_1 0:p_88_1
END

// 8th with 32th triller (8th rest) 8th with 32th triller (8th rest)
PATTERN p_8r8r_tr_1    // one single note
	{ q=2
		0  /8  tr=/32
		-  /8
	}
END

// half note with 16th triller
PATTERN p_2tr16_1    // one single note
	0  /2  tr=/16
END
PATTERN p_2tr16_2    // chord with two notes
	0,1  /2  tr=/16
END

// half note with 32th triller
PATTERN p_2tr32_1    // one single note
	0  /2  tr=/32
END

// quarter note with 16th triller
PATTERN p_4tr16_1    // one single note
	0  /4  tr=/16
END
PATTERN p_4tr16_2    // chord with two notes
	0,1  /4  tr=/16
END

// quarter note with 32th triller
PATTERN p_4tr32_1    // one single note
	0  /4  tr=/32
END

// 16th 16t 4th with 16th triller
PATTERN p_ss4tr16
	: 0:16 0
	0  /4  tr=/16
END

////////////////////////////////////////////////////////////////////////////
// define percussion patterns
////////////////////////////////////////////////////////////////////////////

PATTERN perc167  // 2=to, 0,1=bd2,cc2
	2    /2  m,   tr=/32
	0,1  /4  q=2
END

PATTERN perc186_to_187
	2  /2  m, tr=/32     // second measure
	:  0,1:4 - $f           0,1,2:8 -:4+8
END

PATTERN perc194
	2  /2  m, tr=32
	:  0,1:4 0,1
END

PATTERN perc232
	2    /2  m, tr=/32
	0,1  /8  q=4
END

PATTERN perc236
	2    /2  m, tr=/32
	: 0,1:4 -
END
